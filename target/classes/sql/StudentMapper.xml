<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sql.StudentMapper">
	<resultMap id="BaseResultMap" type="com.model.Student">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
		<result column="college_id" jdbcType="INTEGER" property="collegeId" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, age, birthday, college_id
	</sql>
	<select id="selectByExample" parameterType="com.model.StudentExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from student
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from student
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.model.StudentExample">
		delete from student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.model.Student">
		insert into student (id, name, age,
		birthday, college_id)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{age,jdbcType=INTEGER},
		#{birthday,jdbcType=TIMESTAMP}, #{collegeId,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.model.Student">
		insert into student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="collegeId != null">
				college_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="collegeId != null">
				#{collegeId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.model.StudentExample"
		resultType="java.lang.Integer">
		select count(*) from student
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update student
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.age != null">
				age = #{record.age,jdbcType=INTEGER},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="record.collegeId != null">
				college_id = #{record.collegeId,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update student
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		age = #{record.age,jdbcType=INTEGER},
		birthday = #{record.birthday,jdbcType=TIMESTAMP},
		college_id = #{record.collegeId,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.model.Student">
		update student
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="collegeId != null">
				college_id = #{collegeId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.model.Student">
		update student
		set name = #{name,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		college_id = #{collegeId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	
	<resultMap id="resultListStudent" type="Student">
		<id column="id" property="id" />
		<result column="name" property="name" />
		<result column="age" property="age" />
		<result column="birthday" property="birthday" />
	</resultMap>

	<select id="selectStudentByID" parameterType="int" resultType="Student">
		select * from student where id = #{id}
	</select>

	<select id="selectAllStudent" resultMap="resultListStudent">
		select * from student
	</select>

	<insert id="addStudent" keyProperty="id" parameterType="Student"
		useGeneratedKeys="true">
		insert into student(name, age,
		birthday)
		values(#{name}, #{age}, #{birthday})
	</insert>

	<update id="updateStudent" parameterType="Student">
		update student set
		name=#{name}, age=#{age}, birthday=#{birthday} where id=#{id}
	</update>

	<delete id="deleteStudent" parameterType="int">
		delete from student
		where id = #{id}
	</delete>

	<select id="getAllStudentByCollegeId" parameterType="int"
		resultMap="resultListStudent">
		select * from student where student.college_id=#{id}
	</select>

	<select id="selectStudentsByPage" parameterType="java.util.Map"
		resultMap="resultListStudent">
		select * from student limit #{index, jdbcType=INTEGER} ,
		#{pageSize, jdbcType=INTEGER}
	</select>

</mapper>